{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","addToCartHandler","src","image","alt","title","description","price","Button","onClick","CartItem","aside","Cart","cartItems","addToCart","removeFromCart","length","map","StyledButton","IconButton","getProducts","a","fetch","json","App","items","useState","cartOpen","setCartOpen","useQuery","data","isLoading","error","clickedItem","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","reduce","acc","amount","color","Grid","container","spacing","xs","sm","id","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"qPAEaA,EAAUC,IAAOC,IAAV,qc,OCwBLC,EAZe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,iBAAT,OAC5B,eAACL,EAAD,WACE,qBAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,QAChC,gCACE,6BAAKL,EAAKK,QACV,4BAAIL,EAAKM,cACT,oCAAON,EAAKO,YAEd,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAiBD,IAAxC,6BCZWU,EAFY,kBAAM,6CCNpBd,EAAUC,IAAOc,MAAV,6GC0BLC,EAde,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAA2C,EAAhCC,UAAgC,EAArBC,eACrD,OACE,eAAC,EAAD,WACE,+CAGsB,IAArBF,EAAUG,OAAe,gDAAyB,KAClDH,EAAUI,KAAI,SAACjB,GAAD,OACb,cAAC,EAAD,W,8DCnBKJ,EAAUC,IAAOC,IAAV,6CAIPoB,EAAerB,YAAOsB,IAAPtB,CAAH,6FCoBnBuB,EAAW,uCAAG,sBAAAC,EAAA,sEACLC,MAAM,qCADD,8BACuCC,OADvC,mFAAH,qDAwCFC,EArCH,WACV,IAKuBC,EALvB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOb,EAAP,KAEA,GAFA,KAEmCgB,YAAyB,WAAYT,IAAhEU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAInB/B,EAAmB,SAACgC,GAAD,OAA+B,MAIxD,OAAIF,EAAkB,cAACG,EAAA,EAAD,IAClBF,EAAc,0DAGhB,eAAC,EAAD,WACE,cAACG,EAAA,EAAD,CAAQC,OAAO,QAAQC,KAAMV,EAAUW,QAAS,kBAAMV,GAAY,IAAlE,SACE,cAAC,EAAD,CAAMf,UAAWA,EAAWC,UAAWb,EAAkBc,eARlC,kBAAM,UAU/B,cAACG,EAAD,CAAcT,QAAS,kBAAMmB,GAAY,IAAzC,SACE,cAACW,EAAA,EAAD,CAAOC,cAfUf,EAekBZ,EAfQY,EAAMgB,QAAO,SAACC,EAAa1C,GAAd,OAAuB0C,EAAM1C,EAAK2C,SAAQ,IAenDC,MAAM,QAArD,SACE,cAAC,IAAD,QAIJ,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,gBACGjB,QADH,IACGA,OADH,EACGA,EAAMb,KAAI,SAACjB,GAAD,OACT,cAAC6C,EAAA,EAAD,CAAM7C,MAAI,EAAegD,GAAI,GAAIC,GAAI,EAArC,SACE,cAAC,EAAD,CAAMjD,KAAMA,EAAMC,iBAAkBA,KADtBD,EAAKkD,a,iBCtDzBC,EAAS,IAAIC,IAEnBC,IAASC,OACP,cAACC,EAAA,EAAD,CAAqBJ,OAAQA,EAA7B,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.78577cdb.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  border: 1px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n\r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 1rem;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import Button from '@material-ui/core/Button';\r\n\r\n// types\r\nimport { CartItemType } from '../App';\r\n\r\n// styles\r\nimport { Wrapper } from './Item.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCartHandler: (clickedItem: CartItemType) => void;\r\n  // RemoveFromCartHandler:;\r\n};\r\n\r\nconst Item: React.FC<Props> = ({ item, addToCartHandler }) => (\r\n  <Wrapper>\r\n    <img src={item.image} alt={item.title} />\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <p>{item.description}</p>\r\n      <h3>$ {item.price}</h3>\r\n    </div>\r\n    <Button onClick={() => addToCartHandler(item)}>Add to cart</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import Button from '@material-ui/core/Button';\r\n\r\n// types\r\nimport { CartItemType } from '../App';\r\n\r\n// styles\r\nimport { Wrapper } from './CartItem.styles';\r\n\r\nconst CartItem: React.FC = () => <div>Cart Item</div>;\r\n\r\nexport default CartItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  width: 500px;\r\n  padding: 20px;\r\n`;\r\n","import CartItem from '../CartItem/CartItem';\r\n\r\n// styles\r\nimport { Wrapper } from './Cart.styles';\r\n\r\n// type\r\nimport { CartItemType } from '../App';\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n  return (\r\n    <Wrapper>\r\n      <h2>Shopping cart</h2>\r\n\r\n      {/* check if the cart is empty */}\r\n      {cartItems.length === 0 ? <p>No items yet...</p> : null}\r\n      {cartItems.map((item) => (\r\n        <CartItem />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import styled from 'styled-components';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 40px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 20px;\r\n  right: 20px;\r\n`;\r\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\n// components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\n// styles\nimport { Wrapper, StyledButton } from './App.styles';\n// import { AmpStoriesOutlined } from '@material-ui/icons';\n\n// types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json(); // converting to JSON is also async\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>('products', getProducts);\n\n  const getTotalItems = (items: CartItemType[]) => items.reduce((acc: number, item) => acc + item.amount, 0);\n\n  const addToCartHandler = (clickedItem: CartItemType) => null;\n\n  const removeFromCartHandle = () => null;\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart cartItems={cartItems} addToCart={addToCartHandler} removeFromCart={removeFromCartHandle} />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} addToCartHandler={addToCartHandler} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}