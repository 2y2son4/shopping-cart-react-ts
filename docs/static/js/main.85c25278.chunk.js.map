{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","addToCartHandler","src","image","alt","title","description","price","Button","onClick","getProducts","a","fetch","json","App","useQuery","data","isLoading","error","console","log","clickedItem","LinearProgress","Grid","container","spacing","map","xs","sm","id","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"gOAEaA,EAAUC,IAAOC,IAAV,0B,OCwBLC,EAZe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,iBAAT,OAC5B,eAACL,EAAD,WACE,qBAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,QAChC,gCACE,6BAAKL,EAAKK,QACV,4BAAIL,EAAKM,cACT,oCAAON,EAAKO,YAEd,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAiBD,IAAxC,6B,gBCpBSJ,EAAUC,IAAOC,IAAV,0BCuBdY,EAAW,uCAAG,sBAAAC,EAAA,sEACLC,MAAM,qCADD,8BACuCC,OADvC,mFAAH,qDA8BFC,EA3BH,WACV,MAAmCC,YAAyB,WAAYL,GAAhEM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAEzBC,QAAQC,IAAIJ,GAEZ,IAEMf,EAAmB,SAACoB,GAAD,OAA+B,MAIxD,OAAIJ,EAAkB,cAACK,EAAA,EAAD,IAClBJ,EAAc,0DAGhB,cAAC,EAAD,UACE,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,gBACGT,QADH,IACGA,OADH,EACGA,EAAMU,KAAI,SAAC1B,GAAD,OACT,cAACuB,EAAA,EAAD,CAAMvB,MAAI,EAAe2B,GAAI,GAAIC,GAAI,EAArC,SACE,cAAC,EAAD,CAAM5B,KAAMA,EAAMC,iBAAkBA,KADtBD,EAAK6B,Y,gBC1CzBC,EAAS,IAAIC,IAEnBC,IAASC,OACP,cAACC,EAAA,EAAD,CAAqBJ,OAAQA,EAA7B,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.85c25278.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\n","import Button from '@material-ui/core/Button';\r\n\r\n// types\r\nimport { CartItemType } from '../App';\r\n\r\n// styles\r\nimport { Wrapper } from './Item.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCartHandler: (clickedItem: CartItemType) => void;\r\n  // RemoveFromCartHandler:;\r\n};\r\n\r\nconst Item: React.FC<Props> = ({ item, addToCartHandler }) => (\r\n  <Wrapper>\r\n    <img src={item.image} alt={item.title} />\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <p>{item.description}</p>\r\n      <h3>$ {item.price}</h3>\r\n    </div>\r\n    <Button onClick={() => addToCartHandler(item)}>Add to cart</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\n// components\nimport Item from './Item/Item';\n// import Drawer from '@material-ui/core/drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\n// styles\nimport { Wrapper } from './App.styles';\n\n// types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json(); // converting to JSON is also async\n\nconst App = () => {\n  const { data, isLoading, error } = useQuery<CartItemType[]>('products', getProducts);\n\n  console.log(data);\n\n  const getTotalItems = () => null;\n\n  const addToCartHandler = (clickedItem: CartItemType) => null;\n\n  const removeFromCartHandle = () => null;\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <Wrapper>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} addToCartHandler={addToCartHandler} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}